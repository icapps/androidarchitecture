def versions = [
        buildtools       : '3.5.3',
        kotlin           : '1.3.60',
        detekt           : '1.4.0',
        arch             : '1.1.1',
        junit            : '4.12',
        androidTestRunner: '1.0.1',
        retrofit         : '2.7.1',
        okhttp           : '3.12.1',
        niddler          : '1.0.1',
        versionsPlugin   : '0.17.0',
        leakcanary       : '1.6.3',
        databinding      : '3.2.0-alpha11',
        dagger           : '2.25.4',
        dokka            : '0.9.17',
        appCompat        : '1.1.0',
        annotations      : '1.1.0',
        lifecycle        : '2.2.0',
        powerMock        : '2.0.4',
        mockito          : '3.1.0',
]

ext.versions = versions

def gradlePlugins = [
        buildTools: "com.android.tools.build:gradle:${versions.buildtools}",
        kotlin    : "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
        versions  : "com.github.ben-manes:gradle-versions-plugin:${versions.versionsPlugin}",
        dokka     : "org.jetbrains.dokka:dokka-gradle-plugin:${versions.dokka}",
]

def kotlin = [
        kotlinStdLib: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
]

def libs = [
        appCompat         : "androidx.appcompat:appcompat:${versions.appCompat}",
        annotations       : "androidx.annotation:annotation:${versions.annotations}",
        lifecycleViewModel: "androidx.lifecycle:lifecycle-viewmodel:${versions.lifecycle}",
        lifecycleRuntime  : "androidx.lifecycle:lifecycle-runtime:${versions.lifecycle}",
        retrofit          : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
        okhttp            : "com.squareup.okhttp3:okhttp:${versions.okhttp}",
        databinding       : "androidx.databinding:library:3.2.0-alpha11",
        dagger            : "com.google.dagger:dagger:${versions.dagger}",
]

def testing = [
        junit       : "junit:junit:${versions.junit}",
        powerMock   : "org.powermock:powermock-module-junit4:${versions.powerMock}",
        powerMockito: "org.powermock:powermock-api-mockito2:${versions.powerMock}",
        mockito     : "org.mockito:mockito-core:${versions.mockito}",
]

def niddler = [
        niddler: "com.icapps.niddler:niddler:${versions.niddler}",
]

def leakCanary = [
        leakCanary: "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}",
]

ext.deps = [
        "gradlePlugins": gradlePlugins,
        "kotlin"       : kotlin,
        "libs"         : libs,
        "niddler"      : niddler,
        "leakCanary"   : leakCanary,
        "testing"      : testing,
]